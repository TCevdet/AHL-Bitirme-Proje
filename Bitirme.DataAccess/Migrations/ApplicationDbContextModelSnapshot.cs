// <auto-generated />
using Bitirme.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bitirme.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bitirme.Models.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Siparis")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Kategoriler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "GramAltin",
                            Siparis = 1
                        },
                        new
                        {
                            Id = 2,
                            Ad = "KulceAltin",
                            Siparis = 2
                        },
                        new
                        {
                            Id = 3,
                            Ad = "ZiynetAltin",
                            Siparis = 3
                        },
                        new
                        {
                            Id = 4,
                            Ad = "Diger",
                            Siparis = 4
                        });
                });

            modelBuilder.Entity("Bitirme.Models.Urun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Fiyat")
                        .HasColumnType("float");

                    b.Property<double>("Fiyat100")
                        .HasColumnType("float");

                    b.Property<double>("Fiyat50")
                        .HasColumnType("float");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<double>("ListeFiyat")
                        .HasColumnType("float");

                    b.Property<string>("ResimUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrunAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrunKodu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrunMarka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.ToTable("Urunler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Aciklama = "Rafineri onaylı ve belgeli, özel kutusunda gram altın ",
                            Fiyat = 1900.0,
                            Fiyat100 = 1880.0,
                            Fiyat50 = 1890.0,
                            KategoriId = 1,
                            ListeFiyat = 1900.0,
                            ResimUrl = "",
                            UrunAdi = "Gram Altın",
                            UrunKodu = "grm01",
                            UrunMarka = "Ahlatcı Rafineri"
                        },
                        new
                        {
                            Id = 2,
                            Aciklama = "Rafineri onaylı ve belgeli, özel kutusunda gram altın ",
                            Fiyat = 3500.0,
                            Fiyat100 = 3470.0,
                            Fiyat50 = 3480.0,
                            KategoriId = 4,
                            ListeFiyat = 3500.0,
                            ResimUrl = "",
                            UrunAdi = "Çeyrek Altın",
                            UrunKodu = "cyr01",
                            UrunMarka = "Ahlatcı Rafineri"
                        },
                        new
                        {
                            Id = 3,
                            Aciklama = "Rafineri onaylı ve belgeli, özel kutusunda gram altın ",
                            Fiyat = 5000.0,
                            Fiyat100 = 4750.0,
                            Fiyat50 = 4990.0,
                            KategoriId = 1,
                            ListeFiyat = 5000.0,
                            ResimUrl = "",
                            UrunAdi = "Yarım Altın",
                            UrunKodu = "yrm01",
                            UrunMarka = "Ahlatcı Rafineri"
                        },
                        new
                        {
                            Id = 4,
                            Aciklama = "Rafineri onaylı ve belgeli, özel kutusunda 10 Gram Külçe Altın ",
                            Fiyat = 18000.0,
                            Fiyat100 = 17500.0,
                            Fiyat50 = 17800.0,
                            KategoriId = 2,
                            ListeFiyat = 18000.0,
                            ResimUrl = "",
                            UrunAdi = "10 Gram Külçe Altın",
                            UrunKodu = "Kulce0001",
                            UrunMarka = "Ahlatcı Rafineri"
                        },
                        new
                        {
                            Id = 5,
                            Aciklama = "Rafineri onaylı ve belgeli, özel kutusunda 30 gram 18 Ayar şık kadın bilekliği ",
                            Fiyat = 50000.0,
                            Fiyat100 = 49700.0,
                            Fiyat50 = 49800.0,
                            KategoriId = 2,
                            ListeFiyat = 50000.0,
                            ResimUrl = "",
                            UrunAdi = "30 Gram Altın Bileklik",
                            UrunKodu = "Ziynet001",
                            UrunMarka = "Ahlatcı Rafineri"
                        },
                        new
                        {
                            Id = 6,
                            Aciklama = "Rafineri onaylı ve belgeli, özel hediye kutusunda 50 gram 22 Ayar Burma Bilezik ",
                            Fiyat = 85000.0,
                            Fiyat100 = 84600.0,
                            Fiyat50 = 84850.0,
                            KategoriId = 3,
                            ListeFiyat = 85000.0,
                            ResimUrl = "",
                            UrunAdi = "50 Gram Burma Bilezik",
                            UrunKodu = "Ziynet002",
                            UrunMarka = "Ahlatcı Rafineri"
                        });
                });

            modelBuilder.Entity("Bitirme.Models.Urun", b =>
                {
                    b.HasOne("Bitirme.Models.Kategori", "Kategori")
                        .WithMany()
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");
                });
#pragma warning restore 612, 618
        }
    }
}
